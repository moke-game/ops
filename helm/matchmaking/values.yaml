# Default values for platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: <your docker private registry>/matchmaking

fullnameOverride: "matchmaking"
nameOverride: "matchmaking"
volumes:
  - name: tls-server
    csi:
      readOnly: true
      driver: csi.cert-manager.io
      volumeAttributes:
        csi.cert-manager.io/issuer-name: "moke-root-ca"
        csi.cert-manager.io/dns-names: "*.${POD_NAMESPACE}.svc.cluster.local"
        csi.cert-manager.io/issuer-kind: "AWSPCAClusterIssuer"
        csi.cert-manager.io/issuer-group: "awspca.cert-manager.io"
        csi.cert-manager.io/common-name: "${SERVICE_ACCOUNT_NAME}.${POD_NAMESPACE}"
        csi.cert-manager.io/duration: "168h"
        csi.cert-manager.io/renew-before: "1h"
  - name: tls-client
    csi:
      readOnly: true
      driver: csi.cert-manager.io
      volumeAttributes:
        csi.cert-manager.io/issuer-name: "moke-root-ca"
        csi.cert-manager.io/issuer-kind: "AWSPCAClusterIssuer"
        csi.cert-manager.io/issuer-group: "awspca.cert-manager.io"
        csi.cert-manager.io/common-name: "${SERVICE_ACCOUNT_NAME}.${POD_NAMESPACE}"
        csi.cert-manager.io/duration: "168h"
        csi.cert-manager.io/renew-before: "1h"
# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tls-client
    mountPath: "./configs/agones"
    readOnly: true
  - name: tls-client
    mountPath: "/configs/tls-client"
    readOnly: true
  - name: tls-server
    mountPath: "/configs/tls-server"
    readOnly: true
env:
  - name: "AGONES_DEPLOYMENT"
    value: "prod"
  - name: ALLOCATE_SERVICE_URL
    value: "agones-allocator.agones-system.svc.cluster.local:443"
  - name: "AWS_KEY"
    valueFrom:
      secretKeyRef:
        name: moke-secret
        key: aws-key
  - name: "AWS_SECRET"
    valueFrom:
      secretKeyRef:
        name: moke-secret
        key: aws-secret
  - name: "SUB_NET"
    valueFrom:
      secretKeyRef:
        name: moke-secret
        key: sub-net